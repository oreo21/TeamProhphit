Team TeamPlatekProphit

reoK -- 2017-05-09 13:52
initialized devlog.txt

reoK -- 2017-05-10 14:02
emailed Mr. Cheng and started design document

vannaM -- 2017-05-11 10:15
met with Mr. Cheng to discuss idea and work out specifics of what he wants. main takeaways:

-data will likely be given in csv format; sample files to be sent soon.
-AP signups based on pre-requisites and offered courses desired (basic functionality).
-must allow for administrative oversight.

reoK, vannaM, amyX, haleyZ -- 2017-05-11 14:05
reviewed Mr. Cheng's requests
figured out database structure and functionality needed
began working on the design document

reoK, vannaM, amyX, haleyZ -- 2017-05-12 00:29
completed design document

haleyZ -- 2017-05-15 14:04
reviewed sample data files sent by client
began db initializer

reoK, vannaM, amyX, haleyZ -- 2017-05-16  13:50
met with Mr. Cheng to clarify some questions
AP selection is imperative, elective selection if time permits
impartial with regards to visuals
export will produce a single file with info for multiple students
course pre-reqs should be flexible/customizable for admins
admin override feature is needed

reoK -- 2017-05-16 22:23
added files for basic SQLite based Flask login app

vannaM -- 2017-05-16 22:25
added dummy html files into templates folder

reoK -- 2017-05-17 14:04
converted Flask app's login functionality from SQLite to MongoDB

vannaM -- 2017-05-18 21:43
more dummy files
example of uploading file

haleyZ -- 2017-05-19 13:50
finished fixing db_builder.py so that it can initialize records for students in the db based on input file formats

reoK -- 2017-05-20 19:05
worked on logins for different account types

vannaM -- 2017-05-21 18:34
modified forms in all relevant HTML files using hard-coded variables and dummy functions

vannaM -- 2017-05-21 21:34
bug fixes, esp. path fixes
form fixes, dummy variable passing

reoK -- 2017-05-21 22:37
reverted some necessary login code in app.py

amyX -- 2017-05-21 23:46
added static folder and incorporated bootstrap
implemented lumen theme for bootstrap
added register options for admin and student

amyX -- 2017-05-22 00:26
implemented tabs navigation for students
	the tabs consist of ap course selection and course guide
added content for student home; including explanation for why x student got y slots
fiddled with the nav bar in base.html

amyX -- 2017-05-22 00:40
implemented tabs nav for admin
	the tabs consist of add students, remove, modify courses
consolidtated unnecessary templates (add.html, remove.html, modifyChoose.html) into one page as design doc has recorded down

haleyZ -- 2017-05-22 01:00
finished creating admin functionality for uploading student transcripts to initialize student collection
(new database schema) departments collection that stores all the course codes belonging to the department
set up our database on lisa to prepare for demo

amyX -- 2017-05-22 10:43
hard coded the guide for student home (subject to change); perhaps temporary

amyX -- 2017-05-22 14:06
fixed lumen theme font not showing problem

vannaM -- 2017-05-23 20:00
minor jscript so you can't pick APs twice

amyX -- 2017-05-23 21:47
set up oauth logins for the website
wrote code to check if user logging in via gmail is a stuy.edu user
fixed routes for student/admin home to accommodate oauth login

amyX -- 2017-05-23 22:07
tested admin list to see if oauth would correctly link to student/admin homes
added search bar for admin home page
added additional {% if x%} statements into html to make navbar portray login/logout tabs properly

amyX -- 2017-05-23 22:51
Redid home.html and removed student_login.html as the template for "/" route
Added styling and interface updates to home.html

haleyZ -- 2017-05-23 23:33
finished backend to input the courses & grades students have taken based on uploaded transcript
reworked database schema of student data. The courses_taken dictionary now has keys as department names but values as lists of dictionaries. Each inner dict holds the code of the course and the mark. Also added a list for unknown course codes for admin to later correct via frontend.

haleyZ -- 2017-05-24 14:00
wrote functions to calculate the department averages and overall average

haleyZ -- 2017-05-24 23:29
added db functions to get course by code, get student by id, edit course, edit student, get list of all AP courses
wrote up a list to let front-end/Flask team members know what functions I wrote and when they should be utilized
commented my functions to explain what they do

reoK, vannaM, amyX, haleyZ -- 2017-05-25 14:00
pow wow with Mr. Cheng:

-there must be 2 separate login pages (admins vs. students) as an added safety measure
-OAuth will be used for ALL accounts, super-admin included
-method of encryption is up to us
-types of prereqs (for APs):
    -overall average
    -dept. average for math (excluding CS, which includes a K in code) and sciences (split by dept.)
    -having a certain grade in specified course
    -courses taken  (pass || taking), pass in file 1.04 & taking in file 1.01
-update and check in more often!
-PE and labs (7 chars, ends with 'L') have a weight of 0, included in file 1.14 (transcript)
-project needs proper documentation, so that next year's students can pick up where we leave off
-output file will contain rows of students in the format: name | OSIS | requests
-purpose of super-admin is to make admins, otherwise "goes to sleep" and serves only as fail safe
-admin override features:
       -change # of APs a student can take
       -make certain APs eligible/ineligible for students
       -set up weird classes before turning on the system
-when admins setup course requirements, implent OR and AND abilities to combine reqs

amyX -- 2017-05-25 21:07
started adding the code for modifying courses on the front end and flask side
created search.html template and created search route in app.py + added flask loops in search.html
debugged oauth problems
added some display fxnality to front end

amyX -- 2017-05-25 22:19
modified admin_home.html's modify course panel with flask code
	write code to iterate through departments and then create panels for each departments, correctly linked the different div containers such that they'd open and respond to clicks appropriately

vannaM -- 2017-05-25 22:40
remove is less theoretical
navbar has correct links
search works in theory
mod uses real information

amyX -- 2017-05-25 23:37
changed the grid structure of modify.html to make the page more readable so that the user doesn't have to scroll
added the flask code to get the current course's requirements and display them

amyX -- 2017-05-26 00:08
updated from tabs to pills on admin home
changed the arrangement of the now-pills
added return to previous button on modify/<course> pages

haleyZ -- 2017-05-26 00:29
finished designing the db schema for storing prereq courses to allow for admins to input a variety of requirement structures (for example, "courseX AND (courseY OR courseZ)" )
added a function to return all the courses in a department
figured out special cases for classes that I will need to address
made a to-do list for upcoming days

vannaM -- 2017-05-26 21:20
removed now-irrelevant html files
finished front-end functionality of remove, search (+ editing students), shut down of system, export file

haleyZ -- 2017-05-28 01:24
adjusted db schema so that courses store applicable grade levels (9, 10 11, 12)
fixed bug with determining cours weights
wrote function to generate list of aps a student qualifies for (untested)

haleyZ -- 2017-05-30 11:00
wrote remove_student, remove_cohort functions
wrote grade_to_cohort, cohort_to_grade helpers
added admin override to ap generation function

amyX -- 2017-05-30 14:06
added fxnality on flask for setting prereqs
connect front and back end for modifying prereqs

haleyZ -- 2017-05-31 12:20
Wrote functions to get and set site status, drop db and drop students collection
Fixed edit_student so it will recalculate averages
Fixed init_departments so cs will be its own average

amyX -- 2017-05-31 14:02
finished the flask code for putting the right courses in the right departments under modify
finished flask modify fxnality

amyX -- 2017-05-31 14:06
fixed empty departments in modify

vannaM -- 2017-05-21 21:45
aesthetic
search fix
separated logins
success/error messages (bc users need external validation)
categorizing failure classes

haleyZ -- 2017-05-31 22:20
fixed the way courses with unknown departments are stored in the db so that get_problematic_courses() works

amyX -- 2017-06-01 14:07
implemented flask part for manually setting undocumented courses (missing dept) in app.py and categorize.html

vannaM -- 2017-06-01 21:00
frontend functionality for reset db + clear students (under SETTINGS)
shut down + turn on functional now
modify form issues fixed
frontend for admin account creation + frontend validation w/ajax
aesthetic, cleaning

vannaM -- 2017-06-04 03:00
created uploading of student transcripts + courses
